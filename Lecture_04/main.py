def f(x):
    return x * x

print(type(f))

a = f

print(a(5))
print(type(a))

# ---------------------------------
print(end = '\n\n')
def calc1(a, b):
    return a + b

def calc2(a, b):
    return a * b

def math(op, x, y):
    print(op(x, y))

math(calc1, 5, 45)
math(calc2, 5, 45)

# лямбда функции:
calc3 = lambda a, b: a + b
math(calc3, 5, 45)

# или
math(lambda a, b: a + b, 5, 45)

print(end = '\n\n')
# Задача: В списке хранятся числа. Нужно выбрать только четные числа
# и составить список пар (число; квадрат чила)
# Пример: 1 2 3 5 8 15 23 38
# Получить: [(2, 4), (8, 64), (38, 1444)]

list1 = [1, 2, 3, 5, 8, 15, 23, 38]
list2 = []
for el in list1:
    if el % 2 == 0:
        list2.append((el, el * el))

print(list2)

# или с лямбдой

def select(f, col):         # по сути это функция map
    return [f(x) for x in col]

def where(f, col):          # по сути это функция filter
    return [x for x in col if f(x)]

list3 = select(int, list1)
print(list3)
list3 = where(lambda x: x % 2 == 0, list3)
print(list3)
list3 = select(lambda x: (x, x ** 2), list3)
print(list3)

print(end = '\n\n')
# -------------------------------------------------

list_1 = [x for x in range(1, 20)]
print(list_1)

list_1 = list(map(lambda x: x + 10, list_1))
print(list_1)

print(end = '\n\n')
# Задача: С клавиатуры вводится набор чисел, в качестве
# разделителя используется пробел. Этот набор чисел будет считан
# в качестве строки. Как превратить list строк в list чисел?

data = '12 34 3 23 1 231 5464 32'
print(data)

data = list(map(int, data.split()))
print(data)

print(end = '\n\n')
# ----------------------------------------------------

data = [15, 65, 9, 36, 175]

res = list(filter(lambda x: x % 10 == 5, data))
print(res)

print(end = '\n\n')
# ------------------------------------------------------
# Функция zip() применяется к набору итерируемых объектов
# и возвращает итератор с кортежами из элементов входных данных

# zip(([1, 2, 3], ['о', 'д', 'т'], ['f', 's', 't']))

# [(1, 'о', 'f'), (2, 'д', 's'), (3, 'т', 't')]

users = ['user1', 'user2', 'user3', 'user4', 'user5']
ids = [4, 5, 9, 14, 7]
data = list(zip(users, ids))
print(data)

# Функция zip() пробегает по минимальному фходящему набору6

users2 = ['user1', 'user2', 'user3', 'user4', 'user5']
ids = [4, 5, 9, 14, 7]
salary = [111, 222, 333]
data = list(zip(users, ids, salary))
print(data)

print(end = '\n\n')
# ---------------------------------------------------------
# Функция enumerate() применяется к итерируемому объекту и
# возвращает новыйй итератор с кортежами из индекса и
# элементов входных данных

# enumerate(['Казань', 'Смоленск', 'Рыбки', 'Чикаго'])
# [(0, 'Казань'), (1, 'Смоленск'), (2, 'Рыбки'), (3, 'Чикаго')]

# Функция enumerate() позволяет пронумеровать набор данных

users3 = ['user1', 'user2', 'user3']
data = list(enumerate(users3))
print(data)

print(end = '\n\n')
# ---------------------------------------------------------
# Работа с файлами
# Варианты режимов работы с файлами:
# a - открытие для добавления данных в имеющийся файлам
#     * Позволяет дописывать данные в имеющийся файлам
#     * Если попробовать дописать в несуществующий файл,
#       то файл будет создан

# r - открытие для чтения данных
#     * Позволяет читать данные из файла
#     * Если попробовать считать данные из несуществующего файла,
#       программа выдаст ошибку

# w - открытие для записи данных
#     * Позволяет записывать данные и создавать файл, если его нет
#     * Если файл был, то он перезапишится

# w+ - Позволяет открывать файл для записи и читать из него
#     * Если файла нет, то он создастся

# r+ - Позволяет открывать файл для чтения и дописывать в него
#     * Елси файла не было, программа выдаст ошибку

colors = ['red', 'green', 'blue']
data = open('Lecture_04/file.txt', 'a')        # a - режим работы с файлом
data.writelines(colors) # разделителей не будет
data.close()

# Чтобы не забывать закрывать файлы можно:

with open ('Lecture_04/file.txt', 'w') as data:
    data.write('line 1\n')
    data.write('line 2\n')

print() # Здесь файл уже закроется

path = 'Lecture_04/file.txt'
data = open('Lecture_04/file.txt', 'r')
for line in data:
    print(line)
data.close()