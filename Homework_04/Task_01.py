# Напишите функцию print_operation_table(operation, num_rows, num_columns), 
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру 
# строки и столбца.

# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, 
# которые должны быть распечатаны.

# Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля).

# Если строк меньше двух, выдайте текст
# ОШИБКА! Размерности таблицы должны быть больше 2!.

# Примечание: бинарной операцией называется любая операция, у которой ровно два аргумента, 
# как, например, у операции умножения.

# Между элементами должен быть 1 пробел, в конце строки пробел не нужен.

def print_operation_table(operation, num_rows = 9, num_columns = 9):
    if num_rows < 2 or num_columns < 2:
        print("ОШИБКА! Размерности таблицы должны быть больше 2!")
        return
    for row in range(1, num_rows + 1):
        for column in range(1, num_columns + 1):
            if row == 1:
                print(column, end = '')
            elif column == 1:
                print(row, end = '')
            else:
                print(operation(row, column), end = '')
            if column != num_columns:
                print(end = ' ')
        print()


# Пример

# На входе:
# print_operation_table(lambda x, y: x * y, 3, 3)
# На выходе:
# 1 2 3
# 2 4 6 
# 3 6 9

# На входе:
# print_operation_table(lambda x, y: x + y, 4, 4)
# На выходе:
# 1 2 3 4
# 2 4 5 6
# 3 5 6 7
# 4 6 7 8

# На входе:
# print_operation_table(lambda x, y: x - y, 5, 5)
# На выходе:
# 1 2 3 4 5
# 2 0 -1 -2 -3
# 3 1 0 -1 -2
# 4 2 1 0 -1
# 5 3 2 1 0
        
# На входе:
# print_operation_table(lambda x, y: x / y, 4, 4)
# На выходе:
# 1 2 3 4
# 2 1.0 0.6666666666666666 0.5
# 3 1.5 1.0 0.75
# 4 2.0 1.3333333333333333 1.0

# На входе:
print_operation_table(lambda x, y: x * y)
# На выходе:
# 1 2 3 4 5 6 7 8 9
# 2 4 6 8 10 12 14 16 18
# 3 6 9 12 15 18 21 24 27
# 4 8 12 16 20 24 28 32 36
# 5 10 15 20 25 30 35 40 45
# 6 12 18 24 30 36 42 48 54
# 7 14 21 28 35 42 49 56 63
# 8 16 24 32 40 48 56 64 72
# 9 18 27 36 45 54 63 72 81